{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-customer/add-customer.component.ts","webpack:///src/app/components/add-customer/add-customer.component.html","webpack:///src/app/components/add-invoice/add-invoice.component.ts","webpack:///src/app/components/add-invoice/add-invoice.component.html","webpack:///src/app/components/customers-details/customers-details.component.ts","webpack:///src/app/components/customers-details/customers-details.component.html","webpack:///src/app/components/customers/customers.component.ts","webpack:///src/app/components/customers/customers.component.html","webpack:///src/app/components/edit-customer/edit-customer.component.ts","webpack:///src/app/components/edit-customer/edit-customer.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/customer.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddCustomerComponent","customerService","router","customer","first_name","last_name","company","email","phone","address","street","city","state","zip","saveCustomer","subscribe","navigate","onAddSubmit","AddInvoiceComponent","route","snapshot","params","console","log","invoice","service","price","status","due","saveInvoice","CustomerDetailsComponent","getCustomer","getInvoices","invoices","markPaid","deleteInvoice","CustomersComponent","getCustomers","customers","deleteCustomer","EditCustomerComponent","updateCustomer","onEditSubmit","NavbarComponent","CustomerService","http","get","pipe","res","headers","append","post","put","customer_id","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { CustomerDetailsComponent } from './components/customers-details/customers-details.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { AddInvoiceComponent } from './components/add-invoice/add-invoice.component';\n\nconst routes: Routes = [\n  {path: '', component: CustomersComponent},\n  {path: 'customer/add', component: AddCustomerComponent},\n  {path: 'customer/:id', component: CustomerDetailsComponent},\n  {path: 'customer/edit/:id', component: EditCustomerComponent},\n  {path: 'invoice/add/:customer_id', component: AddInvoiceComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'invoicer-angular';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { CustomerDetailsComponent } from './components/customers-details/customers-details.component';\nimport { AddInvoiceComponent } from './components/add-invoice/add-invoice.component';\n\n// services from each component, need to\nimport {CustomerService} from './services/customer.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CustomersComponent,\n    AddCustomerComponent,\n    EditCustomerComponent,\n    CustomerDetailsComponent,\n    AddInvoiceComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n// the reason why we need Router is because we need to do a re-direct\nimport { Router } from '@angular/router'\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n  first_name;\n  last_name;\n  company;\n  email;\n  phone;\n  street;\n  city;\n  state;\n  zip;\n  constructor(private customerService: CustomerService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onAddSubmit() {\n    let customer = {\n      first_name: this.first_name,\n      last_name: this.last_name,\n      company: this.company,\n      email: this.email,\n      phone: this.phone,\n      address: {\n        street: this.street,\n        city: this.city,\n        state: this.state,\n        zip: this.zip\n      }\n    }\n    this.customerService.saveCustomer(customer).subscribe(customer => {\n      // re-direct\n      this.router.navigate(['/']);\n    })\n  }\n}\n","<h1 class=\"page-header\">Add Customer</h1>\n<form (submit)=\"onAddSubmit()\" class=\"well\">\n    <div class=\"form-group\">\n        <label>First Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"first_name\" name=\"first_name\" placeholder=\"First Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"last_name\" name=\"last_name\" placeholder=\"Last Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Company</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"company\" name=\"company\" placeholder=\"Company\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\">\n    </div>\n    <div class=\"form-group\">\n        <label>Phone Number</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" placeholder=\"Phone Number\">\n    </div>\n    <div class=\"form-group\">\n        <label>Street</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"street\" name=\"street\" placeholder=\"Street Address\">\n    </div>\n    <div class=\"form-group\">\n        <label>City</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"city\" name=\"city\" placeholder=\"City\">\n    </div>\n    <div class=\"form-group\">\n        <label>State</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"state\" name=\"state\" placeholder=\"State\">\n    </div>\n    <div class=\"form-group\">\n        <label>Zip</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"zip\" name=\"zip\" placeholder=\"Zip Code\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-add-invoice',\n  templateUrl: './add-invoice.component.html',\n  styleUrls: ['./add-invoice.component.css']\n})\nexport class AddInvoiceComponent implements OnInit {\n  customer;\n  service;\n  price;\n  status;\n  due;\n\n  constructor(private customerService: CustomerService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n\n  onAddSubmit() {\n    // customer_id\n    this.customer = this.route.snapshot.params['customer_id'];\n    console.log(this.customer);\n    let invoice = {\n      customer: this.customer,\n      service: this.service,\n      price: this.price,\n      status: this.status,\n      due: this.due\n    }\n    \n    this.customerService.saveInvoice(invoice).subscribe(invoice => {\n      this.router.navigate(['/']);\n    })\n  }\n}\n","<h1 class=\"page-header\">Add Invoice</h1>\n<form (submit)=\"onAddSubmit()\" class=\"well\">\n    <div class=\"form-group\">\n        <label>Service</label> <!-- ngmodels are defined in component.ts -->\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"service\" name=\"service\" placeholder=\"Service\">\n    </div>\n    <div class=\"form-group\">\n        <label>Price</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"price\" name=\"price\" placeholder=\"Price\">\n    </div>\n    <div class=\"form-group\">\n        <label>Status</label>\n        <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\n            <option value=\"unpaid\">Unpaid</option>\n            <option value=\"paid\">Paid</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label>Due Date</label>\n        <input type = \"date\" class=\"form-control\" [(ngModel)]=\"due\" name=\"due\" placeholder=\"Due Date\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\n// the reason why we need Router is because we need to do a re-direct\n// ActivateRoute and Params are for getting the :id\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-customers-details',\n  templateUrl: './customers-details.component.html',\n  styleUrls: ['./customers-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n  id: string;\n  customer;\n  invoices;\n  \n  constructor(private customerService: CustomerService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // get the 'id' param from routing infomration\n    //this.id = this.route.snapshot.params['id'];\n    this.id = this.route.snapshot.params.id;\n   \n    this.customerService.getCustomer(this.id).subscribe(customer => {\n      this.customer = <Customer>customer;\n    });\n\n    this.customerService.getInvoices(this.id).subscribe(invoices => {\n      this.invoices = invoices;\n    });\n  }\n\n  markPaid(id, invoice) {\n    invoice.status = 'paid';\n    this.customerService.markPaid(id, invoice).subscribe(invoice => {\n      invoice = 'paid';\n    });\n  }\n\n  onDeleteClick(id) {\n    this.customerService.deleteInvoice(id).subscribe(invoice => {\n      this.router.navigate(['/customer/'+this.id]);\n    });\n  }\n}\n\nexport interface Customer {\n  id: string;\n  first_name: string;\n  last_name:  string;\n  company:  string;\n  email: string;\n  phone:  string\n  address:  {\n    street: string;\n    city: string;\n    state: string;\n    zip: string\n  }\n}\n\nexport interface Invoice {\n  _id: string;\n  customer: string;\n  service: string;\n  status: string;\n  created_at: Date;\n}","<!-- need to load customer module first before redering the page; otherwise it will\ngive an error for customer.xxx property undefined -->\n<div *ngIf=\"customer\">\n    <h1 class=\"page-header\">{{customer.first_name}} {{customer.last_name}}</h1>\n    <h4>Contact Info</h4>\n    <ul class=\"list-grou\">\n        <li class=\"list-group-item\"><strong>Company: </strong>{{customer.company}}</li>\n        <li class=\"list-group-item\"><strong>Email: </strong>{{customer.email}}</li>\n        <li class=\"list-group-item\"><strong>Phone: </strong>{{customer.phone}}</li>\n    </ul>\n\n    <h4>Location Info</h4>\n    <ul class=\"list-grou\">\n        <li class=\"list-group-item\"><strong>Street: </strong>{{customer.address.street}}</li>\n        <li class=\"list-group-item\"><strong>City: </strong>{{customer.address.city}}</li>\n        <li class=\"list-group-item\"><strong>State: </strong>{{customer.address.state}}</li>\n        <li class=\"list-group-item\"><strong>zip: </strong>{{customer.address.zip}}</li>\n    </ul>\n\n    <h4 class=\"page-header\">Invoices <a routerLink=\"/invoice/add/{{id}}\">Create Inovice</a></h4>\n    <div class=\"invoices\">\n    <table class=\"table table-stripped\">\n        <tr>\n            <th>ID</th>\n            <th>Service</th>\n            <th>Price</th>\n            <th>Status</th>\n            <th>Due</th>\n            <th></th>\n        </tr>\n        <!-- loop through customers -->\n        <tr *ngFor=\"let invoice of invoices\">\n            <td>{{invoice._id}}</td>\n            <td>{{invoice.service}}</td>\n            <td>{{invoice.price}}</td>\n            <td>{{invoice.status}}</td>\n            <td>{{invoice.due}}</td>\n            <td>\n                <a (click)=\"markPaid(invoice._id, invoice)\" class=\"btn btn-primary\">Mark Paid</a>\n                <a hred=\"\" (click)=\"onDeleteClick(invoice._id)\" class=\"btn btn-danger\">Delete</a>\n            </td>\n        </tr>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service'\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  customers;\n  // inject dependency in constructor\n  constructor(private customerService: CustomerService, private router: Router) { }\n\n  ngOnInit(): void {\n    // calling service, subscribe() is to send request to server https://angular.io/guide/http\n    this.customerService.getCustomers().subscribe(customers => {\n      this.customers = customers;\n    });\n  }\n\n  onDeleteClick(id) {\n    this.customerService.deleteCustomer(id).subscribe(customer => {\n      this.router.navigate(['/']);\n    });\n  }\n}\n","<h1 class=\"page-header\">Customers</h1>\n<div class=\"customers\">\n    <table class=\"table table-stripped\">\n        <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th></th>\n        </tr>\n        <!-- loop through customers -->\n        <tr *ngFor=\"let customer of customers\">\n            <td>{{customer.first_name}}</td>\n            <td>{{customer.last_name}}</td>\n            <td>{{customer.email}}</td>\n            <td>{{customer.phone}}</td>\n            <td>\n                <a routerLink =\"/customer/{{customer._id}}\" class=\"btn btn-info\">Details</a>\n                <a routerLink =\"/customer/edit/{{customer._id}}\" class=\"btn btn-primary\">Edit</a>\n                <a (click)=\"onDeleteClick(customer._id)\" class=\"btn btn-danger\">Delete</a>\n            </td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n  id;\n  first_name;\n  last_name;\n  company;\n  email;\n  phone;\n  street;\n  city;\n  state;\n  zip;\n  constructor(private router: Router, private customerService: CustomerService, private route: ActivatedRoute) {  }\n\n  ngOnInit(): void {\n    // get the 'id' param from routing infomration\n    this.id = this.route.snapshot.params['id'];\n    this.customerService.getCustomer(this.id).subscribe(customer => {\n      this.first_name = (<Customer>customer).first_name;\n      this.last_name = (<Customer>customer).last_name;\n      this.company = (<Customer>customer).company;\n      this.email = (<Customer>customer).email;\n      this.phone = (<Customer>customer).phone;\n      this.street = (<Customer>customer).address.street;\n      this.city = (<Customer>customer).address.city;\n      this.state = (<Customer>customer).address.state;\n      this.zip = (<Customer>customer).address.zip;\n    });\n  }\n  onEditSubmit() {\n    let customer = {\n      first_name: this.first_name,\n      last_name: this.last_name,\n      email: this.email,\n      phone: this.phone,\n      address: {\n        street: this.street,\n        city: this.city,\n        state: this.state,\n        zip: this.zip\n      }\n    }\n\n    this.customerService.updateCustomer(this.id, customer).subscribe(customer => {\n      this.router.navigate(['/']);\n    })\n  }\n}\n\nexport interface Customer {\n  id: string;\n  first_name: string;\n  last_name:  string;\n  company:  string;\n  email: string;\n  phone:  string\n  address:  {\n    street: string;\n    city: string;\n    state: string;\n    zip: string\n  }\n}","<h1 class=\"page-header\">Edit Customer</h1>\n<form (submit)=\"onEditSubmit()\" class=\"well\">\n    <div class=\"form-group\">\n        <label>First Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"first_name\" name=\"first_name\" placeholder=\"First Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"last_name\" name=\"last_name\" placeholder=\"Last Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Company</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"company\" name=\"company\" placeholder=\"Company\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\">\n    </div>\n    <div class=\"form-group\">\n        <label>Phone Number</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" placeholder=\"Phone Number\">\n    </div>\n    <div class=\"form-group\">\n        <label>Street</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"street\" name=\"street\" placeholder=\"Street Address\">\n    </div>\n    <div class=\"form-group\">\n        <label>City</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"city\" name=\"city\" placeholder=\"City\">\n    </div>\n    <div class=\"form-group\">\n        <label>State</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"state\" name=\"state\" placeholder=\"State\">\n    </div>\n    <div class=\"form-group\">\n        <label>Zip</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"zip\" name=\"zip\" placeholder=\"Zip Code\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Invoicer</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto navbar-left\">\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['']\">Dashboard<span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav mr-auto navbar-right\">\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['customer/add']\">Add New Customer<span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n            <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  // inject HttpClient as dependency\n  constructor(private http: HttpClient) { }\n\n  getCustomers() {\n    // return an observable, \n    // https://rxjs-dev.firebaseapp.com/api/operators/map\n    // res is now in json format so no need to do res.json()\n    // pipe\n    // map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R>\n    return this.http.get('http://localhost:3000/api/customers').pipe(map(res => res));\n  }\n\n  getCustomer(id) {\n    // return an observable\n    return this.http.get('http://localhost:3000/api/customers/'+id).pipe(map(res => res));\n  }\n\n  saveCustomer(customer) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.post('http://localhost:3000/api/customers', customer, {headers: headers}).pipe(map(res=>res));\n  }\n\n  updateCustomer(id, customer) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.put('http://localhost:3000/api/customers/'+id, customer, {headers: headers}).pipe(map(res=>res));\n  }\n  \n  deleteCustomer(id) {\n    // return an observable\n    return this.http.delete('http://localhost:3000/api/customers/'+id).pipe(map(res => res));\n  }\n\n  getInvoices(customer_id) {\n    // return an observable\n    return this.http.get('http://localhost:3000/api/invoices/customers/'+customer_id).pipe(map(res => res));\n  }\n\n  markPaid(id, invoice) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.put('http://localhost:3000/api/invoices/'+id, invoice, {headers: headers}).pipe(map(res=>res));\n  }\n\n  deleteInvoice(id) {\n    return this.http.delete('http://localhost:3000/api/invoices/'+id).pipe(map(res=>res));\n  }\n\n  saveInvoice(invoice) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.post('http://localhost:3000/api/invoices', invoice, {headers: headers}).pipe(map(res=>res));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}