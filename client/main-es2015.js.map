{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-customer/add-customer.component.ts","./src/app/components/add-customer/add-customer.component.html","./src/app/components/add-invoice/add-invoice.component.ts","./src/app/components/add-invoice/add-invoice.component.html","./src/app/components/customers-details/customers-details.component.ts","./src/app/components/customers-details/customers-details.component.html","./src/app/components/customers/customers.component.ts","./src/app/components/customers/customers.component.html","./src/app/components/edit-customer/edit-customer.component.ts","./src/app/components/edit-customer/edit-customer.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/customer.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { CustomerDetailsComponent } from './components/customers-details/customers-details.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { AddInvoiceComponent } from './components/add-invoice/add-invoice.component';\n\nconst routes: Routes = [\n  {path: '', component: CustomersComponent},\n  {path: 'customer/add', component: AddCustomerComponent},\n  {path: 'customer/:id', component: CustomerDetailsComponent, runGuardsAndResolvers: 'always'},\n  {path: 'customer/edit/:id', component: EditCustomerComponent},\n  {path: 'invoice/add/:customer_id', component: AddInvoiceComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'invoicer-angular';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { AddCustomerComponent } from './components/add-customer/add-customer.component';\nimport { EditCustomerComponent } from './components/edit-customer/edit-customer.component';\nimport { CustomerDetailsComponent } from './components/customers-details/customers-details.component';\nimport { AddInvoiceComponent } from './components/add-invoice/add-invoice.component';\n\n// services from each component, need to\nimport {CustomerService} from './services/customer.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CustomersComponent,\n    AddCustomerComponent,\n    EditCustomerComponent,\n    CustomerDetailsComponent,\n    AddInvoiceComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n// the reason why we need Router is because we need to do a re-direct\nimport { Router } from '@angular/router'\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n  first_name;\n  last_name;\n  company;\n  email;\n  phone;\n  street;\n  city;\n  state;\n  zip;\n  constructor(private customerService: CustomerService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onAddSubmit() {\n    let customer = {\n      first_name: this.first_name,\n      last_name: this.last_name,\n      company: this.company,\n      email: this.email,\n      phone: this.phone,\n      address: {\n        street: this.street,\n        city: this.city,\n        state: this.state,\n        zip: this.zip\n      }\n    }\n    this.customerService.saveCustomer(customer).subscribe(customer => {\n      // re-direct\n      this.router.navigate(['/']);\n    })\n  }\n}\n","<h1 class=\"page-header\">Add Customer</h1>\n<form (submit)=\"onAddSubmit()\" class=\"well\">\n    <div class=\"form-group\">\n        <label>First Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"first_name\" name=\"first_name\" placeholder=\"First Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"last_name\" name=\"last_name\" placeholder=\"Last Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Company</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"company\" name=\"company\" placeholder=\"Company\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\">\n    </div>\n    <div class=\"form-group\">\n        <label>Phone Number</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" placeholder=\"Phone Number\">\n    </div>\n    <div class=\"form-group\">\n        <label>Street</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"street\" name=\"street\" placeholder=\"Street Address\">\n    </div>\n    <div class=\"form-group\">\n        <label>City</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"city\" name=\"city\" placeholder=\"City\">\n    </div>\n    <div class=\"form-group\">\n        <label>State</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"state\" name=\"state\" placeholder=\"State\">\n    </div>\n    <div class=\"form-group\">\n        <label>Zip</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"zip\" name=\"zip\" placeholder=\"Zip Code\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-add-invoice',\n  templateUrl: './add-invoice.component.html',\n  styleUrls: ['./add-invoice.component.css']\n})\nexport class AddInvoiceComponent implements OnInit {\n  customer;\n  service;\n  price;\n  status;\n  due;\n\n  constructor(private customerService: CustomerService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n\n  onAddSubmit() {\n    // customer_id\n    this.customer = this.route.snapshot.params['customer_id'];\n    console.log(this.customer);\n    let invoice = {\n      customer: this.customer,\n      service: this.service,\n      price: this.price,\n      status: this.status,\n      due: this.due\n    }\n    \n    this.customerService.saveInvoice(invoice).subscribe(invoice => {\n      this.router.navigate(['/']);\n    })\n  }\n}\n","<h1 class=\"page-header\">Add Invoice</h1>\n<form (submit)=\"onAddSubmit()\" class=\"well\">\n    <div class=\"form-group\">\n        <label>Service</label> <!-- ngmodels are defined in component.ts -->\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"service\" name=\"service\" placeholder=\"Service\">\n    </div>\n    <div class=\"form-group\">\n        <label>Price</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"price\" name=\"price\" placeholder=\"Price\">\n    </div>\n    <div class=\"form-group\">\n        <label>Status</label>\n        <select class=\"form-control\" [(ngModel)]=\"status\" name=\"status\">\n            <option value=\"unpaid\">Unpaid</option>\n            <option value=\"paid\">Paid</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label>Due Date</label>\n        <input type = \"date\" class=\"form-control\" [(ngModel)]=\"due\" name=\"due\" placeholder=\"Due Date\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\n// the reason why we need Router is because we need to do a re-direct\n// ActivateRoute and Params are for getting the :id\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-customers-details',\n  templateUrl: './customers-details.component.html',\n  styleUrls: ['./customers-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n  id: string;\n  customer;\n  invoices;\n  \n  constructor(private customerService: CustomerService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // get the 'id' param from routing infomration\n    //this.id = this.route.snapshot.params['id'];\n    this.id = this.route.snapshot.params.id;\n   \n    this.customerService.getCustomer(this.id).subscribe(customer => {\n      this.customer = <Customer>customer;\n    });\n\n    this.customerService.getInvoices(this.id).subscribe(invoices => {\n      this.invoices = invoices;\n    });\n  }\n\n  markPaid(id, invoice) {\n    invoice.status = 'paid';\n    this.customerService.markPaid(id, invoice).subscribe(invoice => {\n      invoice = 'paid';\n    });\n  }\n\n  onDeleteClick(id) {\n    this.customerService.deleteInvoice(id).subscribe(invoice => {\n      // this won't reload the page\n      // this.router.navigate(['/customer/'+this.id]);\n\n      // using the following method will reload the current page after delete \n      let currentUrl = this.router.url;\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n        this.router.navigate([currentUrl]);\n      });\n    });\n  }\n}\n\nexport interface Customer {\n  id: string;\n  first_name: string;\n  last_name:  string;\n  company:  string;\n  email: string;\n  phone:  string\n  address:  {\n    street: string;\n    city: string;\n    state: string;\n    zip: string\n  }\n}\n\nexport interface Invoice {\n  _id: string;\n  customer: string;\n  service: string;\n  status: string;\n  created_at: Date;\n}","<!-- need to load customer module first before redering the page; otherwise it will\ngive an error for customer.xxx property undefined -->\n<div *ngIf=\"customer\">\n    <h1 class=\"page-header\">{{customer.first_name}} {{customer.last_name}}</h1>\n    <h4>Contact Info</h4>\n    <ul class=\"list-grou\">\n        <li class=\"list-group-item\"><strong>Company: </strong>{{customer.company}}</li>\n        <li class=\"list-group-item\"><strong>Email: </strong>{{customer.email}}</li>\n        <li class=\"list-group-item\"><strong>Phone: </strong>{{customer.phone}}</li>\n    </ul>\n\n    <h4>Location Info</h4>\n    <ul class=\"list-grou\">\n        <li class=\"list-group-item\"><strong>Street: </strong>{{customer.address.street}}</li>\n        <li class=\"list-group-item\"><strong>City: </strong>{{customer.address.city}}</li>\n        <li class=\"list-group-item\"><strong>State: </strong>{{customer.address.state}}</li>\n        <li class=\"list-group-item\"><strong>zip: </strong>{{customer.address.zip}}</li>\n    </ul>\n\n    <h4 class=\"page-header\">Invoices <a routerLink=\"/invoice/add/{{id}}\">Create Inovice</a></h4>\n    <div class=\"invoices\">\n    <table class=\"table table-stripped\">\n        <tr>\n            <th>ID</th>\n            <th>Service</th>\n            <th>Price</th>\n            <th>Status</th>\n            <th>Due</th>\n            <th></th>\n        </tr>\n        <!-- loop through customers -->\n        <tr *ngFor=\"let invoice of invoices\">\n            <td>{{invoice._id}}</td>\n            <td>{{invoice.service}}</td>\n            <td>{{invoice.price}}</td>\n            <td>{{invoice.status}}</td>\n            <td>{{invoice.due}}</td>\n            <td>\n                <a (click)=\"markPaid(invoice._id, invoice)\" class=\"btn btn-primary\">Mark Paid</a>\n                <a hred=\"\" (click)=\"onDeleteClick(invoice._id)\" class=\"btn btn-danger\">Delete</a>\n            </td>\n        </tr>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service'\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  customers;\n  // inject dependency in constructor\n  constructor(private customerService: CustomerService, private router: Router) { }\n\n  ngOnInit(): void {\n    // calling service, subscribe() is to send request to server https://angular.io/guide/http\n    this.customerService.getCustomers().subscribe(customers => {\n      this.customers = customers;\n    });\n  }\n\n  onDeleteClick(id) {\n    this.customerService.deleteCustomer(id).subscribe(customer => {\n      this.router.navigate(['/']);\n    });\n  }\n}\n","<h1 class=\"page-header\">Customers</h1>\n<div class=\"customers\">\n    <table class=\"table table-stripped\">\n        <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th></th>\n        </tr>\n        <!-- loop through customers -->\n        <tr *ngFor=\"let customer of customers\">\n            <td>{{customer.first_name}}</td>\n            <td>{{customer.last_name}}</td>\n            <td>{{customer.email}}</td>\n            <td>{{customer.phone}}</td>\n            <td>\n                <a routerLink =\"/customer/{{customer._id}}\" class=\"btn btn-info\">Details</a>\n                <a routerLink =\"/customer/edit/{{customer._id}}\" class=\"btn btn-primary\">Edit</a>\n                <a (click)=\"onDeleteClick(customer._id)\" class=\"btn btn-danger\">Delete</a>\n            </td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\nimport { CustomerService } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n  id;\n  first_name;\n  last_name;\n  company;\n  email;\n  phone;\n  street;\n  city;\n  state;\n  zip;\n  constructor(private router: Router, private customerService: CustomerService, private route: ActivatedRoute) {  }\n\n  ngOnInit(): void {\n    // get the 'id' param from routing infomration\n    this.id = this.route.snapshot.params['id'];\n    this.customerService.getCustomer(this.id).subscribe(customer => {\n      this.first_name = (<Customer>customer).first_name;\n      this.last_name = (<Customer>customer).last_name;\n      this.company = (<Customer>customer).company;\n      this.email = (<Customer>customer).email;\n      this.phone = (<Customer>customer).phone;\n      this.street = (<Customer>customer).address.street;\n      this.city = (<Customer>customer).address.city;\n      this.state = (<Customer>customer).address.state;\n      this.zip = (<Customer>customer).address.zip;\n    });\n  }\n  onEditSubmit() {\n    let customer = {\n      first_name: this.first_name,\n      last_name: this.last_name,\n      email: this.email,\n      phone: this.phone,\n      address: {\n        street: this.street,\n        city: this.city,\n        state: this.state,\n        zip: this.zip\n      }\n    }\n\n    this.customerService.updateCustomer(this.id, customer).subscribe(customer => {\n      this.router.navigate(['/']);\n    })\n  }\n}\n\nexport interface Customer {\n  id: string;\n  first_name: string;\n  last_name:  string;\n  company:  string;\n  email: string;\n  phone:  string\n  address:  {\n    street: string;\n    city: string;\n    state: string;\n    zip: string\n  }\n}","<h1 class=\"page-header\">Edit Customer</h1>\n<form (submit)=\"onEditSubmit()\" class=\"well\">\n    <div class=\"form-group\">\n        <label>First Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"first_name\" name=\"first_name\" placeholder=\"First Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"last_name\" name=\"last_name\" placeholder=\"Last Name\">\n    </div>\n    <div class=\"form-group\">\n        <label>Company</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"company\" name=\"company\" placeholder=\"Company\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Email\">\n    </div>\n    <div class=\"form-group\">\n        <label>Phone Number</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" placeholder=\"Phone Number\">\n    </div>\n    <div class=\"form-group\">\n        <label>Street</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"street\" name=\"street\" placeholder=\"Street Address\">\n    </div>\n    <div class=\"form-group\">\n        <label>City</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"city\" name=\"city\" placeholder=\"City\">\n    </div>\n    <div class=\"form-group\">\n        <label>State</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"state\" name=\"state\" placeholder=\"State\">\n    </div>\n    <div class=\"form-group\">\n        <label>Zip</label>\n        <input type = \"text\" class=\"form-control\" [(ngModel)]=\"zip\" name=\"zip\" placeholder=\"Zip Code\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Invoicer</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto navbar-left\">\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['']\">Dashboard<span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav mr-auto navbar-right\">\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['customer/add']\">Add New Customer<span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n            <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  // inject HttpClient as dependency\n  constructor(private http: HttpClient) { }\n\n  getCustomers() {\n    // return an observable, \n    // https://rxjs-dev.firebaseapp.com/api/operators/map\n    // res is now in json format so no need to do res.json()\n    // pipe\n    // map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R>\n    return this.http.get('http://localhost:3000/api/customers').pipe(map(res => res));\n  }\n\n  getCustomer(id) {\n    // return an observable\n    return this.http.get('http://localhost:3000/api/customers/'+id).pipe(map(res => res));\n  }\n\n  saveCustomer(customer) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.post('http://localhost:3000/api/customers', customer, {headers: headers}).pipe(map(res=>res));\n  }\n\n  updateCustomer(id, customer) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.put('http://localhost:3000/api/customers/'+id, customer, {headers: headers}).pipe(map(res=>res));\n  }\n  \n  deleteCustomer(id) {\n    // return an observable\n    return this.http.delete('http://localhost:3000/api/customers/'+id).pipe(map(res => res));\n  }\n\n  getInvoices(customer_id) {\n    // return an observable\n    return this.http.get('http://localhost:3000/api/invoices/customers/'+customer_id).pipe(map(res => res));\n  }\n\n  markPaid(id, invoice) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.put('http://localhost:3000/api/invoices/'+id, invoice, {headers: headers}).pipe(map(res=>res));\n  }\n\n  deleteInvoice(id) {\n    return this.http.delete('http://localhost:3000/api/invoices/'+id).pipe(map(res=>res));\n  }\n\n  saveInvoice(invoice) {\n    let headers = new HttpHeaders();\n    headers.append('content-type', 'application/json');\n    return this.http.post('http://localhost:3000/api/invoices', invoice, {headers: headers}).pipe(map(res=>res));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}